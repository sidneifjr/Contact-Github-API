{"version":3,"sources":["components/Image/index.js","components/Logo/index.js","components/Input/index.js","components/Form/index.js","components/Header/index.js","components/Footer/index.js","actions/index.js","constants/index.js","request/index.js","components/Title/index.js","components/Select/index.js","components/Profile/index.js","components/ReposList/index.js","components/ResultsItem/index.js","containers/ResultsPage/index.js","components/Button/index.js","containers/HomePage/index.js","components/Tags/index.js","components/RepoDetails/index.js","containers/RepoDetailsPage/index.js","App.js","serviceWorker.js","reducers/user.js","reducers/repos.js","reducers/search.js","reducers/getSelectedRepo.js","reducers/index.js","index.js"],"names":["Image","Fragment","this","props","src","className","alt","Component","defaultProps","Logo","to","Input","type","placeholder","onChange","event","Form","onSubmit","Header","id","Footer","React","saveUsername","search","payload","saveUser","user","saveRepos","repos","saveRepoData","repoData","console","log","saveRepoLanguages","repoLanguages","GITHUB_COUNT","createGithubUrl","url","parameters","base_url","key","Title","CustomTag","tag","titleClass","children","Select","state","open","selected","itemSelected","documentEventClickOut","bind","document","addEventListener","setState","removeEventListener","onClick","label","map","option","itemClicked","name","Profile","href","html_url","target","rel","avatar_url","followers","following","login","bio","email","public_repos","ReposList","getRepoClicked","repo","description","stargazers_count","language","connect","data","dispatch","bindActionCreators","selectOptions","sorting","ResultsItem","activeFilter","loaded","hasSearchedUser","getSelectedItem","preventDefault","userSearched","username","axios","get","getUserProfile","then","catch","error","per_page","getUserRepos","elem","repoName","reponame","getRepoData","item","sortByDate","sortByName","sortByStars","sort","a","b","created_at","findUser","value","e","length","getReposSorted","RepoLanguages","ResultsPage","updateSearchState","searchLoaded","history","push","Button","link","text","HomePage","callToAction","path","component","Tags","RepoDetails","owner","stars","fileName","repoFile","requestNumber","hoursAgo","whoMadeIt","activityItem","getSelectedRepo","RepoDetailsPage","App","exact","UserRepoDetails","Boolean","window","location","hostname","match","action","mainReducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e3f11c90.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Image extends Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.src && <img src={this.props.src} className={this.props.className} alt={this.props.alt} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nImage.defaultProps = {\r\n    src: '',\r\n    alt: '',\r\n    className: ''\r\n}\r\n\r\nexport default Image;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Image from '../Image';\r\n\r\nimport './logo.scss';\r\n\r\nclass Logo extends Component {\r\n    render(){\r\n        return (\r\n            <Link to=\"/\" className=\"logo\">\r\n                <Image \r\n                    src={\"images/logo.png\"}\r\n                    alt=\"logo\"\r\n                    className={this.props.className}\r\n                    />\r\n\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nLogo.defaultProps = {\r\n    className: ''\r\n}\r\n\r\nexport default Logo;\r\n","import React, { Component } from 'react';\r\nimport './input.scss';\r\n\r\nclass Input extends Component {\r\n    render(){\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.type && <input type={this.props.type} className={this.props.className} placeholder={this.props.placeholder} onChange={this.props.onChange} />}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nInput.defaultProps = {\r\n    type: '',\r\n    className: '',\r\n    placeholder: '',\r\n    onChange: event => null, // passando uma função de retorno nulo, para evitar erros.\r\n}\r\n\r\nexport default Input;\r\n","import React, { Component } from 'react';\r\nimport Input from '../Input';\r\nimport './form.scss';\r\n\r\nclass Form extends Component {\r\n    render(){\r\n        return (\r\n            <form className={this.props.className} onSubmit={this.props.onSubmit}>\r\n                <Input type=\"text\" className=\"search\" placeholder=\"Encontre seu dev!\" />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nForm.defaultProps = {\r\n    className: '',\r\n    onSubmit: event => null,\r\n}\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\r\nimport Logo from '../Logo';\r\nimport Form from '../Form';\r\n\r\nimport './header.scss';\r\n\r\nclass Header extends Component {\r\n    render(){\r\n        return (\r\n            <header id=\"header\">\r\n                <div className=\"header-wrapper\">\r\n                    <Logo />\r\n\r\n                    <Form className=\"header-search\" />\r\n                    {/* teste */}\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './footer.scss';\r\n\r\nclass Footer extends React.Component {\r\n    render(){\r\n        return (\r\n            <footer id=\"footer\">\r\n                <p>Desenvolvido por Sidnei Farias, com React/Redux/Router/Axios e Github API.</p>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","export const saveUsername = (search) => {\r\n    return {\r\n        type: 'SAVE_USERNAME',\r\n        payload: search // payload segurando os dados\r\n    }\r\n}\r\n\r\nexport const saveUser = (user) => {\r\n    return {\r\n        type: 'SAVE_USER',\r\n        payload: user\r\n    }\r\n}\r\n\r\nexport const saveRepos = (repos) => {\r\n    return {\r\n        type: 'SAVE_REPOS',\r\n        payload: repos\r\n    }\r\n}\r\n\r\nexport const saveRepoData = (repoData) => {\r\n    console.log(repoData);\r\n\r\n    return {\r\n        type: 'SAVE_REPO_INFO',\r\n        payload: repoData,\r\n    }\r\n}\r\n\r\nexport const saveRepoLanguages = (repoLanguages) => {\r\n    return {\r\n        type: 'GET_REPO_LANGUAGES',\r\n        payload: repoLanguages\r\n    }\r\n}\r\n","export const GITHUB_URL = \"https://api.github.com\";\r\nexport const GITHUB_CLIENT_ID = \"044ecbe0f9cd24459823\";\r\nexport const GITHUB_CLIENT_SECRET = \"440f7e976118b387fca6d14d9dbe9b742bf03d05\";\r\nexport const GITHUB_COUNT = 7;\r\n","import axios from 'axios';\r\nimport { GITHUB_URL, GITHUB_CLIENT_ID, GITHUB_CLIENT_SECRET, GITHUB_COUNT } from '../constants';\r\n\r\nconst createGithubUrl = (url, parameters) => {\r\n    let base_url = `${GITHUB_URL}/${url}?client_id=${GITHUB_CLIENT_ID}&client_secret=${GITHUB_CLIENT_SECRET}`\r\n\r\n    if (parameters) {\r\n        for(var key in parameters) {\r\n            base_url += '&' + key + '=' + parameters[key]\r\n        }\r\n    }\r\n\r\n    return base_url;\r\n}\r\n\r\nexport function getUserProfile(username) {\r\n    let url = createGithubUrl(`users/${username}`);\r\n\r\n    return axios.get(url);\r\n}\r\n\r\nexport function getUserRepos(username) {\r\n    let url = createGithubUrl(`users/${username}/repos`, {\r\n        per_page: GITHUB_COUNT,\r\n    });\r\n\r\n    return axios.get(url);\r\n}\r\n\r\nexport function getRepoData(username, reponame) {\r\n    let url = createGithubUrl(`repos/${username}/${reponame}`);\r\n\r\n    return axios.get(url);\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './title.scss';\r\n\r\nclass Title extends Component {\r\n    render(){\r\n        const CustomTag = `${this.props.tag}`;\r\n\r\n        return (\r\n            <CustomTag className={this.props.titleClass}>\r\n                {this.props.children}\r\n            </CustomTag>\r\n        )\r\n    }\r\n}\r\n\r\nTitle.defaultProps = {\r\n    tag: '',\r\n    titleClass: ''\r\n}\r\n\r\nexport default Title;\r\n","import React, { Component } from 'react';\r\n\r\nimport './select.scss';\r\n\r\nclass Select extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false,\r\n            selected: false,\r\n            itemSelected: 'Mais populares',\r\n        };\r\n\r\n        this.documentEventClickOut = this.documentEventClickOut.bind(this);\r\n    }\r\n\r\n    componentDidUpdate(props, state) {\r\n        if(this.state.open) {\r\n            document.addEventListener('click', this.documentEventClickOut);\r\n        }\r\n    }\r\n\r\n    documentEventClickOut() {\r\n        this.setState({\r\n            open: false,\r\n        });\r\n\r\n        document.removeEventListener('click', this.documentEventClickOut);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div\r\n                className=\"custom-select\"\r\n                onClick={event =>\r\n                    {\r\n                        this.setState({\r\n                            open: !this.state.open,\r\n                        });\r\n                    }\r\n                }>\r\n\r\n                <p>{this.props.label} {this.state.itemSelected && <span>{this.state.itemSelected}</span>} </p>\r\n\r\n                <ul className = {this.state.open ? \"show\" : \"\"}>\r\n                    {\r\n                        this.props.children.map(option => {\r\n                            return (\r\n                                <li\r\n                                    key={option.key}\r\n                                    onClick={event => {\r\n                                        this.props.itemClicked(option)\r\n\r\n                                        this.setState({\r\n                                            selected: true,\r\n                                            itemSelected: option.label\r\n                                        });\r\n                                    }}>\r\n\r\n                                    { option.name }\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nSelect.defaultProps = {\r\n    label: 'Escolha a opção',\r\n    itemClicked: ''\r\n}\r\n\r\nexport default Select;\r\n","import React from 'react';\r\nimport Image from '../Image';\r\nimport Title from '../Title';\r\n\r\nconst Profile = ({ user }) => {\r\n    return (\r\n        <li className=\"search-results-item\" key={user.id}>\r\n            <a href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                <div className=\"img\">\r\n                    <Image src={user.avatar_url} alt=\"thumbnail\" />\r\n                </div>\r\n\r\n                <div className=\"data\">\r\n                    <div className=\"title\">\r\n                        <Title tag=\"h3\" titleClass=\"data-title\">\r\n                            {user.name ? user.name : 'Username not provided'}\r\n                        </Title>\r\n\r\n                        <div className=\"social-status\">\r\n                            <p className=\"data-description\"> Segue: {user.followers} </p>\r\n                            <p className=\"data-description\"> Seguidores: {user.following} </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <span className=\"data-subtitle\"> @{user.login} </span>\r\n\r\n                    <p className=\"bio\">\r\n                        <strong> Bio: </strong>\r\n                        { user.bio ? user.bio : 'Not available'}\r\n                    </p>\r\n\r\n                    <p className=\"email\">\r\n                        {user.email && user.email }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"repositories-amount\">\r\n                    <h4> {user.public_repos} repos </h4>\r\n                </div>\r\n\r\n                <p className=\"openProfile\"> Acessar perfil </p>\r\n            </a>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { saveRepoData } from '../../actions';\r\n\r\nimport Title from '../Title';\r\nimport Image from '../Image';\r\n\r\nimport './reposList.scss';\r\n\r\nclass ReposList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.getRepoClicked = this.getRepoClicked.bind(this);\r\n    }\r\n\r\n    getRepoClicked(repo) {\r\n        this.props.saveRepoData(repo);\r\n    }\r\n\r\n    render(){\r\n        const { repo } = this.props;\r\n        const { id, name, description, stargazers_count, language } = repo;\r\n\r\n        return (\r\n            <li className=\"user-repos-item\"\r\n                key={id}\r\n                onClick={() => this.getRepoClicked(repo)}>\r\n\r\n                <Link to={\"/repos/\" + id}>\r\n                    <div className=\"repo-data\">\r\n                        <Title tag=\"h3\" titleClass=\"data-title\">\r\n                            {name}\r\n                        </Title>\r\n\r\n                        <p className=\"data-description\">\r\n                            {description ? description : 'Not available'}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"repo-rating\">\r\n                        <div className=\"rated\">\r\n                            <Title tag=\"h4\">\r\n                                {stargazers_count}\r\n                            </Title>\r\n\r\n                            <Image src={\"images/star.svg\"} alt=\"stars\" />\r\n                        </div>\r\n\r\n                        {language && <p> { language } </p>}\r\n                    </div>\r\n                </Link>\r\n            </li>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        repoData: state.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ saveRepoData }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ReposList);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { saveUsername, saveUser, saveRepos, saveRepoData } from '../../actions';\r\nimport { getUserProfile, getUserRepos, getRepoData } from '../../request';\r\n\r\nimport Title from '../Title';\r\nimport Input from '../Input';\r\nimport Select from '../Select'; \r\nimport Profile from '../Profile';\r\nimport Repos from '../ReposList';\r\n\r\nimport './resultsItem.scss';\r\n\r\nconst selectOptions = [\r\n    {\r\n        name: \"Mais populares\",\r\n        label: \"Mais populares\",\r\n        key: 1,\r\n        sorting: 'stars'\r\n    },\r\n    {\r\n        name: \"Mais recentes\",\r\n        label: \"Mais recentes\",\r\n        key: 2,\r\n        sorting: 'date'\r\n    },\r\n    {\r\n        name: \"Alfabética\",\r\n        label: \"Alfabética\",\r\n        key: 3,\r\n        sorting: 'A-Z'\r\n    }\r\n];\r\n\r\nclass ResultsItem extends Component {\r\n    state = {\r\n        activeFilter: selectOptions[0],\r\n        loaded: false,\r\n        // userExists: false,\r\n        hasSearchedUser: false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.getSelectedItem = this.getSelectedItem.bind(this);\r\n    }\r\n\r\n    findUser(event) {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            loaded: true\r\n        });\r\n\r\n        const userSearched = this.props.search;\r\n\r\n        getUserProfile(userSearched)\r\n            .then(\r\n                ({ data }) => {\r\n                    this.props.saveUser(data);\r\n\r\n                    // this.setState({\r\n                    //     userExists: true\r\n                    // });\r\n\r\n                    // console.log(this.state.userExists);\r\n                }\r\n            ).catch(error => {\r\n                this.setState({\r\n                    // userExists: false,\r\n                    hasSearchedUser: true\r\n                });\r\n\r\n                // console.log(this.state.userExists);\r\n                // console.log(error);\r\n            });\r\n\r\n        getUserRepos(userSearched)\r\n            .then(\r\n                ({ data }) => {\r\n                    this.props.saveRepos(data);\r\n                    // console.log(data);\r\n\r\n                    data.map(elem => {\r\n                        const repoName = elem.name;\r\n\r\n                        return getRepoData(userSearched, repoName).then(\r\n                            ({ data }) => {\r\n                                this.props.saveRepoData(data);\r\n                                // console.log(data);\r\n                            }\r\n                        )\r\n                    })\r\n                }\r\n            )\r\n    }\r\n\r\n    getSelectedItem(item){\r\n        this.setState({\r\n            activeFilter: item\r\n        });\r\n    }\r\n\r\n    getReposSorted(){\r\n        switch (this.state.activeFilter.sorting) {\r\n            case 'date':\r\n                return this.sortByDate();\r\n\r\n            case 'A-Z':\r\n                return this.sortByName();\r\n\r\n            case 'stars':\r\n            default:\r\n                return this.sortByStars();\r\n        }\r\n    }\r\n\r\n    sortByStars(){\r\n        return this.props.repos.sort((a, b) => {\r\n            if (a.stargazers_count > b.stargazers_count) {\r\n                return -1;\r\n            }\r\n\r\n            else if (a.stargazers_count < b.stargazers_count) {\r\n                return 1;\r\n            }\r\n\r\n            else {\r\n                return 0;\r\n            }\r\n        }) || [];\r\n    }\r\n\r\n    sortByDate(){\r\n        return this.props.repos.sort((a, b) => {\r\n            if (a.created_at > b.created_at) {\r\n                return -1;\r\n            }\r\n\r\n            else if (a.created_at < b.created_at) {\r\n                return 1;\r\n            }\r\n\r\n            else {\r\n                return 0;\r\n            }\r\n        }) || [];\r\n    }\r\n\r\n    sortByName(){\r\n        return this.props.repos.sort((a, b) => {\r\n            if (a.name < b.name) {\r\n                return -1;\r\n            }\r\n\r\n            else if (a.name > b.name) {\r\n                return 1;\r\n            }\r\n\r\n            else {\r\n                return 0;\r\n            }\r\n        }) || [];\r\n    }\r\n\r\n    render(){\r\n        const { user, repos } = this.props;\r\n        // const { userExists } = this.state;\r\n        const { hasSearchedUser } = this.state;\r\n\r\n        return (\r\n            <form className=\"search\" onSubmit={event => this.findUser(event)}>\r\n                <Input\r\n                    type=\"search\"\r\n                    placeholder=\"Search here!\"\r\n                    value={this.props.search}\r\n                    onChange={(e) =>\r\n                        { this.props.saveUsername(e.target.value) }\r\n                    }\r\n                />\r\n\r\n                {!user ?\r\n                    <div className={\"search-area \" + (hasSearchedUser ? 'not-found' : '')}>\r\n                        <Title tag=\"h3\">\r\n                            { hasSearchedUser ? 'Lamentamos, mas não encontramos nenhum usuário com esse nome ou login. Tente novamente.' : 'Seus resultados serão exibidos aqui!'}\r\n                        </Title>\r\n                    </div> : null\r\n                }\r\n\r\n                {user ? (\r\n                    <ul className=\"search-results\">\r\n                        <Profile user={user} />\r\n                    </ul>) : null}\r\n\r\n                {repos.length ? (\r\n                    <div className=\"repo-results\">\r\n                        <Select label=\"Ordenar por: \" itemClicked={this.getSelectedItem}>\r\n                            { selectOptions }\r\n                        </Select>\r\n\r\n                        <ul className=\"user-repos\">\r\n                            {\r\n                                repos && this.getReposSorted().map(repo =>\r\n                                    <Repos\r\n                                        key={repo.name}\r\n                                        repo={repo}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                ) : null}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // console.log(state);\r\n\r\n    return {\r\n        user: state.user,\r\n        search: state.search,\r\n        repos: state.repos,\r\n        repoData: state.repoData,\r\n        repoLanguages: state.RepoLanguages\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => \r\n    bindActionCreators({ saveUsername, saveUser, saveRepos, saveRepoData}, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResultsItem);\r\n","import React, { Component } from 'react';\r\nimport ResultsItem from '../../components/ResultsItem/index';\r\n\r\nclass ResultsPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            searchLoaded: false\r\n        }\r\n\r\n        this.updateSearchState = this.updateSearchState.bind(this);\r\n    }\r\n\r\n    // A url da página deverá ser alterada para '/user' quando o componente for carregado.\r\n    // componentDidMount() {\r\n    //     console.log(\"Estes são os props de ResultsPage: \" + this.props);\r\n    // }\r\n\r\n    componentDidUpdate() {\r\n        this.updateSearchState();\r\n    }\r\n\r\n    updateSearchState = () => {\r\n        this.setState({\r\n            searchLoaded: true\r\n        });\r\n\r\n        this.props.history.push('/search/user');\r\n    }\r\n\r\n    render(){\r\n        console.log(this);\r\n\r\n        // const resultsItemConstant = <ResultsItem />;\r\n        // console.log(resultsItemConstant, resultsItemConstant.state);\r\n\r\n        // const { searchLoaded } = this.state;\r\n        // console.log(searchLoaded);\r\n\r\n        const { history } = this.props;\r\n        console.log(history);\r\n\r\n        return (\r\n            <div className=\"wrapper-md\">\r\n                <ResultsItem />\r\n                {/* { this.updateSearchState() } */}\r\n\r\n                {/* As funções nem ao menos rodam!!! */}\r\n                {/* <ResultsItem loaded={this.state.loaded ? (() => { console.log(\"YEAHAAAAAG!\") }) : (() => { console.log(\"NOOOOOOOOOOOWSA!\") }) } /> */}\r\n\r\n                {/* <ResultsItem\r\n                    loaded={this.state.loaded ? () => this.setState({\r\n                        searchLoaded: true,\r\n                    }) : '' }\r\n                /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ResultsPage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './button.scss';\r\n\r\nclass Button extends Component {\r\n    render(){\r\n        return (\r\n            <Link to={this.props.link} className=\"btn primary\" onClick={this.props.onClick}>\r\n                {this.props.text}\r\n            </Link>\r\n        )\r\n    }\r\n}\r\n\r\nButton.defaultProps = {\r\n    text: '',\r\n    link: '',\r\n    onClick: event => null\r\n}\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport ResultsPage from '../ResultsPage';\r\n\r\nimport Button from '../../components/Button';\r\n\r\nimport '../../styles/home.scss';\r\n\r\nclass HomePage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.callToAction = this.callToAction.bind(this);\r\n    }\r\n\r\n    callToAction = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.history.push('/search');\r\n    }\r\n\r\n    render(){\r\n        console.log(this);\r\n\r\n        return (\r\n            <div className=\"wrapper-md\">\r\n                <div className=\"home\">\r\n                    <div className=\"home-title\">\r\n                        <h1>Contact Github API</h1>\r\n                        <p>Encontre os usuários que você deseja, com facilidade e comodidade!</p>\r\n                    </div>\r\n\r\n                    <Button link=\"\" text=\"Começar\" onClick={this.callToAction} />\r\n                </div>\r\n\r\n                <Route path='/search' component={ResultsPage} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\n\r\nimport './tags.scss';\r\n\r\nclass Tags extends Component {\r\n    render(){\r\n        const { children } = this.props;\r\n        console.log(children);\r\n\r\n        return (\r\n            <div className=\"tags\">\r\n                <span className=\"tag purple\">{children ? children : 'none'} </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tags;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { saveRepoData, saveRepoLanguages } from '../../actions';\r\n\r\nimport Title from '../Title';\r\nimport Image from '../Image';\r\nimport Tags from '../Tags';\r\n\r\nimport './repoDetails.scss';\r\n\r\nclass RepoDetails extends Component {\r\n    render(){\r\n        const repoFiles = [\r\n            {\r\n                fileName: \"test1\",\r\n                key: 1\r\n            },\r\n\r\n            {\r\n                fileName: \"test2\",\r\n                key: 2\r\n            },\r\n\r\n            {\r\n                fileName: \"test3\",\r\n                key: 3\r\n            },\r\n\r\n            {\r\n                fileName: \"test4\",\r\n                key: 4\r\n            },\r\n\r\n            {\r\n                fileName: \"test5\",\r\n                key: 5\r\n            },\r\n\r\n            {\r\n                fileName: \"test6\",\r\n                key: 6\r\n            },\r\n\r\n            {\r\n                fileName: \"test7\",\r\n                key: 7\r\n            },\r\n\r\n            {\r\n                fileName: \"test8\",\r\n                key: 8\r\n            },\r\n\r\n            {\r\n                fileName: \"test9\",\r\n                key: 9\r\n            },\r\n\r\n            {\r\n                fileName: \"test10\",\r\n                key: 10\r\n            },\r\n\r\n            {\r\n                fileName: \"test11\",\r\n                key: 11\r\n            },\r\n\r\n            {\r\n                fileName: \"test12\",\r\n                key: 12\r\n            },\r\n\r\n            {\r\n                fileName: \"test13\",\r\n                key: 13\r\n            },\r\n\r\n            {\r\n                fileName: \"test14\",\r\n                key: 14\r\n            },\r\n\r\n            {\r\n                fileName: \"test15\",\r\n                key: 15\r\n            },\r\n\r\n            {\r\n                fileName: \"readme\",\r\n                key: 16\r\n            },\r\n        ]\r\n\r\n        const activityLog = [\r\n            {\r\n                requestNumber: '#000',\r\n                hoursAgo: '2',\r\n                whoMadeIt: 'mariaif',\r\n                key: 1\r\n            },\r\n\r\n            {\r\n                requestNumber: '#798',\r\n                hoursAgo: '3',\r\n                whoMadeIt: 'JohnDoe',\r\n                key: 2\r\n            },\r\n\r\n            {\r\n                requestNumber: '#125',\r\n                hoursAgo: '6',\r\n                whoMadeIt: 'groundjim',\r\n                key: 3\r\n            },\r\n\r\n            {\r\n                requestNumber: '#224',\r\n                hoursAgo: '4',\r\n                whoMadeIt: 'sidneifjr',\r\n                key: 4\r\n            }\r\n        ]\r\n\r\n        const { repoData } = this.props;\r\n        console.log(repoData);\r\n        // console.log(repoData.language);\r\n\r\n        return (\r\n            <section className=\"single-repo\">\r\n                <header className=\"repo-header\">\r\n                    <div className=\"repo-header-main-info\">\r\n                        <div className=\"repo-header-main-info-title\">\r\n                            <Image src=\"/images/book.svg\" alt=\"star\" />\r\n\r\n                            <Title titleClass=\"repo-title\" tag=\"h3\">\r\n                                {repoData.owner.login ? repoData.owner.login : 'owner-name'} / <strong>{repoData.name ? repoData.name : 'repo-name'}</strong>\r\n                            </Title>\r\n                        </div>\r\n\r\n                        <Tags>{repoData.language}</Tags>\r\n                    </div>\r\n \r\n                    <div className=\"repo-header-side-info\">\r\n                        <div className=\"starred\">\r\n                            <div className=\"star\">\r\n                                <Image src=\"/images/star-full.svg\" alt=\"star\" />\r\n                                <span> Stars </span>\r\n                            </div>\r\n\r\n                            <p>\r\n                                { repoData.stars ? <span> { repoData.stars } </span> : <span> 0 </span> }\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"repo-header-description\">\r\n                        { repoData.description ? <p> { repoData.description } </p> : <p> This is a description for the repository.</p> }\r\n                        { repoData.link ? <a href={repoData.link} rel=\"noopener noreferrer\"> {repoData.link} </a> : <a href=\"/#\" rel=\"noopener noreferrer\">website_example.com.br</a> }\r\n                    </div>\r\n                </header>\r\n\r\n                <section className=\"repo-content\">\r\n                    <aside className=\"file-list\">\r\n                        <Title titleClass=\"list-title\" tag=\"h5\">Files</Title>\r\n\r\n                        <ul className=\"files\">\r\n                            {\r\n                                repoFiles.map(repoFile => {\r\n                                    return (\r\n                                        <li className=\"files-item\" key={repoFile.key}>\r\n                                            <Image src=\"/images/folder.svg\" alt=\"folder\" />\r\n                                            <p> {repoFile.fileName} </p>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </aside>\r\n\r\n                    <div className=\"activity-list\">\r\n                        <Title titleClass=\"list-title\" tag=\"h5\">Activity</Title>\r\n\r\n                        <ul className=\"activity\">\r\n                            {\r\n                                activityLog.map(activityItem => {\r\n                                    return (\r\n                                        <li className=\"activity-item\" key={activityItem.key}>\r\n                                            <Image src=\"https://via.placeholder.com/75x75.jpg\" alt=\"folder\" />\r\n\r\n                                            <div className=\"activity-item-details\">\r\n                                                <Title tag=\"h3\">\r\n                                                    Merge pull request { activityItem.requestNumber }\r\n                                                </Title>\r\n\r\n                                                <p>{ activityItem.hoursAgo } hours ago by <strong><a href=\"/#\" rel=\"noopener noreferrer\">@{activityItem.whoMadeIt}</a></strong></p>\r\n\r\n                                                <span className=\"tag purple\">branch</span>\r\n                                            </div>\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n\r\n    return {\r\n        repoData: state.getSelectedRepo.data\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators({ saveRepoData, saveRepoLanguages }, dispatch);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RepoDetails);\r\n","import React, { Component } from 'react';\r\n// import Button from '../../components/Button';\r\nimport RepoDetails from '../../components/RepoDetails';\r\n\r\nclass RepoDetailsPage extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n\r\n    //     this.goBack = this.goBack.bind(this);\r\n    // }\r\n\r\n    // goBack = (e) => {\r\n    //     e.preventDefault();\r\n\r\n        // console.log(\"Estes são os props de RepoDetailsPage: \" + this.props);\r\n    // }\r\n\r\n    render(){\r\n        // console.log(this);\r\n    \r\n        return (\r\n            <div className=\"wrapper-md\">\r\n                <RepoDetails />\r\n                {/* <Button link=\"\" text=\"Voltar\" onClick={this.goBack} /> */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RepoDetailsPage;\r\n","import React, { Component } from 'react';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport HomePage from './containers/HomePage';\r\nimport ResultsPage from './containers/ResultsPage';\r\nimport UserRepoDetails from './containers/RepoDetailsPage';\r\n\r\nimport './styles/main.scss';\r\n\r\nclass App extends Component {\r\n\trender(){\r\n\t\t// console.log(this);\r\n\r\n\t\treturn (\r\n\t\t\t<BrowserRouter>\r\n\t\t\t\t<main className=\"App\">\r\n\t\t\t\t\t<Header />\r\n\t\r\n\t\t\t\t\t<section className=\"content\">\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path='/' component={HomePage} />\r\n\t\t\t\t\t\t\t<Route path='/search' component={ResultsPage} />\r\n\t\t\t\t\t\t\t<Route path='/repos/:repo_id'  component={UserRepoDetails} />\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</section>\r\n\t\r\n\t\t\t\t\t<Footer />\r\n\t\t\t\t</main>\r\n\t\t\t</BrowserRouter>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const user = (state = false, action) => {\r\n    switch(action.type){\r\n        case \"SAVE_USER\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default user;\r\n","const repos = (state = [], action) => {\r\n    switch(action.type){\r\n        case \"SAVE_REPOS\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default repos;\r\n","const search = (state = '', action) => {\r\n    switch(action.type){\r\n        case \"SAVE_USERNAME\":\r\n            return action.payload;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default search;\r\n","// O action retorna um novo objeto, baseado no anterior (no caso, o state).\r\n// Usar o setState como no exemplo abaixo irá alterar o state original! Isso é péssimo, lembre do conceito de imutabilidade.\r\nconst getSelectedRepo = (state = '', action) => {\r\n    switch(action.type){\r\n        case \"SAVE_REPO_INFO\":\r\n            console.log(action);\r\n\r\n            return {\r\n                data: {\r\n                    id: action.payload.id,\r\n                    name: action.payload.name,\r\n                    description: action.payload.description,\r\n                    stars: action.payload.stargazers_count,\r\n                    language: action.payload.language,\r\n                    link: action.payload.html_url,\r\n                    owner: action.payload.owner\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default getSelectedRepo;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport user from './user';\r\nimport repos from './repos';\r\nimport search from './search';\r\nimport getSelectedRepo from './getSelectedRepo';\r\n\r\nconst mainReducer = combineReducers({\r\n    user,\r\n    repos,\r\n    search,\r\n    getSelectedRepo\r\n});\r\n\r\nexport default mainReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport mainReducer from './reducers';\r\n\r\nconst store = createStore(\r\n    mainReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(<Provider store={store}> <App /> </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}